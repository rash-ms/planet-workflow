name: Staging sync gate

on:
  pull_request:
    branches: [staging]
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: staging-one-shot
  cancel-in-progress: false

jobs:
  sync_and_gate:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # push to branches
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Configure git
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Fetch refs
        run: |
          git fetch origin +refs/heads/main:refs/remotes/origin/main
          git fetch origin +refs/heads/staging:refs/remotes/origin/staging

      # 1) Immediately sync staging with main (direct push; fails on conflicts)
      - name: Fast-forward staging to main if possible
        id: ff
        run: |
          set -e
          if git merge-base --is-ancestor origin/staging origin/main; then
            echo "staging_ahead_or_equal=1" >> $GITHUB_OUTPUT
            exit 0
          fi

      - name: Push sync (FF or clean merge)
        id: pushsync
        run: |
          set -e
          # Are we behind main?
          if git merge-base --is-ancestor origin/main origin/staging; then
            echo "already_contains_main=1" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Try FF first
          git checkout -B staging origin/staging
          if git merge-base --is-ancestor origin/staging origin/main; then
            git merge --ff-only origin/main || true
          else
            # Try clean merge (no conflicts). If conflicts, fail.
            git merge --no-edit origin/main || { echo "::error::Conflicts syncing main â†’ staging. Resolve manually."; exit 1; }
          fi
          git push origin HEAD:staging

      - name: Verify staging now contains main
        run: |
          git fetch origin +refs/heads/staging:refs/remotes/origin/staging
          if ! git merge-base --is-ancestor origin/main origin/staging; then
            echo "::error::staging is not synced with main (conflicts likely)."
            exit 1
          fi

      # 2) Ensure PR branch has latest staging (auto-merge it; fail on conflicts)
      - name: Ensure PR branch contains staging (auto-merge)
        run: |
          if ! git merge-base --is-ancestor origin/staging HEAD; then
            git merge --no-edit --no-ff origin/staging || {
              echo "::error::Conflicts merging staging into your branch. Please merge/rebase locally and push.";
              exit 1
            }
            git push origin "HEAD:${{ github.head_ref }}"
          fi

      # 3) Final gate
      - name: Final gate
        run: |
          git fetch origin +refs/heads/staging:refs/remotes/origin/staging
          if ! git merge-base --is-ancestor origin/staging HEAD; then
            echo "::error::Your branch is not up to date with staging."
            exit 1
          fi
